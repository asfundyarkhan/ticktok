rules_version = '2';

// Storage rules for Ticktok Shop
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*');
    }

    function hasValidRole() {
      return request.auth.token.role == "seller" || request.auth.token.role == "admin";
    }

    // Allow public read access to all files
    match /{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
      
    // Allow write access for authenticated users to their own user directory
    match /users/{userId}/{allUserFiles=**} {
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
      
    // Allow product image uploads for authenticated users
    match /products/{productId}/{fileName} {
      allow write: if isAuthenticated() 
        && isValidImage()
        && request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    // Allow stock image uploads for authenticated users
    match /stock/{path=**} {
      allow write: if isAuthenticated() 
        && isValidImage()
        && request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    // Allow receipt image uploads for authenticated users to their own folder
    match /receipts/{userId}/{fileName} {
      // Allow uploads for authenticated users to their own folder
      allow write: if isAuthenticated() 
        && request.auth.uid == userId 
        && isValidImage()
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
      
      // Allow public read access to receipt images 
      // This ensures users can view receipts regardless of role status
      allow read: if true;
    }
    
    // Allow admin-products image uploads for authenticated users
    match /admin-products/{fileName} {
      allow write: if isAuthenticated() 
        && isValidImage()
        && request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
  }
}
